{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"I:\\\\react4\\\\src\\\\components\\\\PostImages.js\",\n    _s = $RefreshSig$();\n\nimport React, { useCallback, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { PlusOutlined } from \"@ant-design/icons/lib\";\n\nconst PostImages = ({\n  images\n}) => {\n  _s();\n\n  const {\n    0: showImagesZoom,\n    1: setShowImagesZoom\n  } = useState(false);\n  const onZoom = useCallback(() => {\n    setShowImagesZoom(true);\n  }, []);\n\n  if (images.length === 1) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: images[0].src,\n        alt: images[0].src,\n        onClick: onZoom\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 17\n      }, this), showImagesZoom && /*#__PURE__*/_jsxDEV(ImageZoom, {\n        image: images,\n        onClose: onClose\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 36\n      }, this)]\n    }, void 0, true);\n  } else if (images.length === 2) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        style: {\n          width: \"50%\",\n          display: 'inline-block'\n        },\n        src: images[0].src,\n        alt: images[0].src,\n        onClick: onZoom\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        style: {\n          width: \"50%\",\n          display: 'inline-block'\n        },\n        src: images[1].src,\n        alt: images[1].src,\n        onClick: onZoom\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true);\n  } else {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          style: {\n            width: \"50%\"\n          },\n          src: images[0].src,\n          alt: images[0].src,\n          onClick: onZoom\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'inline-block',\n            width: \"50%\",\n            textAlign: 'center',\n            verticalAlign: 'middle'\n          },\n          onClick: onZoom,\n          children: [/*#__PURE__*/_jsxDEV(PlusOutlined, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 21\n          }, this), images.length - 1, \"\\uAC1C\\uC758 \\uC0AC\\uC9C4 \\uB354\\uBCF4\\uAE30\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 13\n      }, this)\n    }, void 0, false);\n  }\n};\n\n_s(PostImages, \"GTwi6wJxyPqj1MEVWtI14RsZfFs=\");\n\n_c = PostImages;\nPostImages.propTypes = {\n  images: PropTypes.arrayOf(PropTypes.object)\n};\nexport default PostImages;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostImages\");","map":{"version":3,"sources":["I:/react4/src/components/PostImages.js"],"names":["React","useCallback","useState","PropTypes","PlusOutlined","PostImages","images","showImagesZoom","setShowImagesZoom","onZoom","length","src","onClose","width","display","textAlign","verticalAlign","propTypes","arrayOf","object"],"mappings":"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","sourcesContent":["import React, {useCallback, useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {PlusOutlined} from \"@ant-design/icons/lib\";\r\n\r\n\r\nconst PostImages = ({images}) => {\r\n    const [showImagesZoom , setShowImagesZoom] = useState(false);\r\n\r\n    const onZoom = useCallback(()=>{\r\n        setShowImagesZoom(true);\r\n    },[])\r\n\r\n    if(images.length === 1){\r\n        return (\r\n            <>\r\n                <img src={images[0].src}\r\n                     alt={images[0].src}\r\n                     onClick={onZoom}/>\r\n                {showImagesZoom && <ImageZoom image={images} onClose={onClose}/>}\r\n            </>\r\n        );\r\n    }\r\n    else if(images.length === 2){\r\n        return (\r\n            <>\r\n                <img style={{width:\"50%\" ,display:'inline-block'}}  src={images[0].src}\r\n                     alt={images[0].src}\r\n                     onClick={onZoom}/>\r\n                <img style={{width:\"50%\" ,display:'inline-block'}} src={images[1].src}\r\n                     alt={images[1].src}\r\n                     onClick={onZoom}/>\r\n            </>\r\n        );\r\n    }else{\r\n        return(\r\n            <>\r\n            <div>\r\n                <img style={{width:\"50%\"}} src={images[0].src}\r\n                     alt={images[0].src}\r\n                     onClick={onZoom}/>\r\n                <div\r\n                    style={{display :'inline-block', width:\"50%\", textAlign:'center' , verticalAlign:'middle'}}\r\n                    onClick={onZoom}>\r\n                    <PlusOutlined />\r\n                    <br/>\r\n                    {images.length-1}\r\n                    개의 사진 더보기\r\n\r\n                </div>\r\n            </div>\r\n            </>\r\n        )\r\n    }\r\n\r\n};\r\n\r\nPostImages.propTypes = {\r\n    images: PropTypes.arrayOf(PropTypes.object),\r\n}\r\n\r\nexport default PostImages;\r\n"]},"metadata":{},"sourceType":"module"}