{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"I:\\\\react4\\\\src\\\\pages\\\\index.js\";\nimport React, { useEffect } from 'react';\nimport AppLayout from \"../components/AppLayout\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport PostForm from \"../components/PostForm\";\nimport PostCard from \"../components/PostCard\";\nimport { LOAD_POST_REQUEST } from \"../reducers/post\";\nimport { LOAD_USER_REQUEST } from \"../reducers/user\";\n\nconst Home = () => {\n  const dispatch = useDispatch();\n  const {\n    isLoggedIn\n  } = useSelector(state => state.user);\n  const {\n    mainPosts,\n    hasMorePost\n  } = useSelector(state => state.post);\n  useEffect(() => {\n    dispatch({\n      type: LOAD_USER_REQUEST\n    });\n  });\n  useEffect(() => {\n    if (hasMorePost) {\n      dispatch({\n        type: LOAD_POST_REQUEST\n      });\n    }\n  });\n  useEffect(() => {\n    function onScroll() {\n      /*            console.log(window.scrollY , document.documentElement.clientHeight,\r\n                      document.documentElement.scrollHeight);*/\n      if (window.scrollY + document.documentElement.clientHeight > document.documentElement.scrollHeight - 300) {\n        dispatch({\n          type: LOAD_POST_REQUEST\n        });\n      }\n    }\n\n    window.addEventListener('scroll', onScroll);\n    return () => {\n      window.removeEventListener('scroll', onScroll);\n    };\n  }, [hasMorePost]);\n  return /*#__PURE__*/_jsxDEV(AppLayout, {\n    children: [isLoggedIn && /*#__PURE__*/_jsxDEV(PostForm, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 28\n    }, this), mainPosts.map(c => {\n      return /*#__PURE__*/_jsxDEV(PostCard, {\n        post: c\n      }, c.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 21\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this);\n};\n\nexport default Home;","map":{"version":3,"sources":["I:/react4/src/pages/index.js"],"names":["React","useEffect","AppLayout","useDispatch","useSelector","PostForm","PostCard","LOAD_POST_REQUEST","LOAD_USER_REQUEST","Home","dispatch","isLoggedIn","state","user","mainPosts","hasMorePost","post","type","onScroll","window","scrollY","document","documentElement","clientHeight","scrollHeight","addEventListener","removeEventListener","map","c","id"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,SAAQC,WAAR,EAAqBC,WAArB,QAAuC,aAAvC;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,SAAQC,iBAAR,QAAiC,kBAAjC;AACA,SAAQC,iBAAR,QAAgC,kBAAhC;;AAEA,MAAMC,IAAI,GAAG,MAAM;AACf,QAAMC,QAAQ,GAAGP,WAAW,EAA5B;AACA,QAAM;AAAEQ,IAAAA;AAAF,MAAiBP,WAAW,CAACQ,KAAK,IAAIA,KAAK,CAACC,IAAhB,CAAlC;AACA,QAAM;AAAEC,IAAAA,SAAF;AAAcC,IAAAA;AAAd,MAA8BX,WAAW,CAACQ,KAAK,IAAIA,KAAK,CAACI,IAAhB,CAA/C;AAEAf,EAAAA,SAAS,CAAC,MAAM;AACZS,IAAAA,QAAQ,CAAC;AACLO,MAAAA,IAAI,EAAET;AADD,KAAD,CAAR;AAGH,GAJQ,CAAT;AAKAP,EAAAA,SAAS,CAAC,MAAI;AACV,QAAGc,WAAH,EAAe;AACXL,MAAAA,QAAQ,CAAC;AACLO,QAAAA,IAAI,EAAGV;AADF,OAAD,CAAR;AAGH;AAEJ,GAPQ,CAAT;AAQAN,EAAAA,SAAS,CAAC,MAAI;AACV,aAASiB,QAAT,GAAmB;AAC3B;AACA;AACY,UAAGC,MAAM,CAACC,OAAP,GAAiBC,QAAQ,CAACC,eAAT,CAAyBC,YAA1C,GAAyDF,QAAQ,CAACC,eAAT,CAAyBE,YAAzB,GAAsC,GAAlG,EAAsG;AAE1Fd,QAAAA,QAAQ,CAAC;AACLO,UAAAA,IAAI,EAACV;AADA,SAAD,CAAR;AAGX;AACJ;;AACDY,IAAAA,MAAM,CAACM,gBAAP,CAAwB,QAAxB,EAAkCP,QAAlC;AACA,WAAO,MAAI;AACPC,MAAAA,MAAM,CAACO,mBAAP,CAA2B,QAA3B,EAAqCR,QAArC;AACH,KAFD;AAGH,GAfQ,EAeN,CAACH,WAAD,CAfM,CAAT;AAiBA,sBACI,QAAC,SAAD;AAAA,eACKJ,UAAU,iBAAI,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,YADnB,EAEKG,SAAS,CAACa,GAAV,CAAeC,CAAD,IAAO;AAClB,0BACI,QAAC,QAAD;AAAqB,QAAA,IAAI,EAAEA;AAA3B,SAAeA,CAAC,CAACC,EAAjB;AAAA;AAAA;AAAA;AAAA,cADJ;AAGH,KAJA,CAFL;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAUH,CA7CD;;AA8CA,eAAepB,IAAf","sourcesContent":["import React, {useEffect} from 'react'\r\nimport AppLayout from \"../components/AppLayout\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport PostForm from \"../components/PostForm\";\r\nimport PostCard from \"../components/PostCard\";\r\nimport {LOAD_POST_REQUEST } from \"../reducers/post\";\r\nimport {LOAD_USER_REQUEST} from \"../reducers/user\";\r\n\r\nconst Home = () => {\r\n    const dispatch = useDispatch()\r\n    const { isLoggedIn } = useSelector(state => state.user);\r\n    const { mainPosts , hasMorePost } = useSelector(state => state.post);\r\n\r\n    useEffect(() => {\r\n        dispatch({\r\n            type: LOAD_USER_REQUEST,\r\n        });\r\n    });\r\n    useEffect(()=>{\r\n        if(hasMorePost){\r\n            dispatch({\r\n                type : LOAD_POST_REQUEST,\r\n            })\r\n        }\r\n\r\n    })\r\n    useEffect(()=>{\r\n        function onScroll(){\r\n/*            console.log(window.scrollY , document.documentElement.clientHeight,\r\n                document.documentElement.scrollHeight);*/\r\n            if(window.scrollY + document.documentElement.clientHeight > document.documentElement.scrollHeight-300){\r\n\r\n                        dispatch({\r\n                            type:LOAD_POST_REQUEST,\r\n                        });\r\n            }\r\n        }\r\n        window.addEventListener('scroll', onScroll);\r\n        return ()=>{\r\n            window.removeEventListener('scroll', onScroll);\r\n        }\r\n    }, [hasMorePost])\r\n\r\n    return (\r\n        <AppLayout>\r\n            {isLoggedIn && <PostForm />}\r\n            {mainPosts.map((c) => {\r\n                return (\r\n                    <PostCard key={c.id} post={c} />\r\n                );\r\n            })}\r\n        </AppLayout>\r\n    );\r\n};\r\nexport default Home;"]},"metadata":{},"sourceType":"module"}