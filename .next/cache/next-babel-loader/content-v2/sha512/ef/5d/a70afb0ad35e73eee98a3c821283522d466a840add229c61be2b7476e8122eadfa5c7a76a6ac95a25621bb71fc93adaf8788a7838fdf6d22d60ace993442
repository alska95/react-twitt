{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"I:\\\\react4\\\\src\\\\components\\\\PostCard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useCallback, useState } from 'react';\nimport { Avatar, Button, Card, Popover, List, Comment } from \"antd\";\nimport { RetweetOutlined, MessageTwoTone, HeartOutlined, HeartTwoTone, MessageOutlined, EllipsisOutlined } from '@ant-design/icons';\nimport PropTypes from 'prop-types';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport PostImages from \"./PostImages\";\nimport CommentForm from \"./CommentForm\";\nimport PostCardContent from \"./PostCardContent\";\nimport { REMOVE_POST_REQUEST } from \"../reducers/post\";\nconst ButtonGroup = Button.Group; //cover antd기능\n//popover 마우스 올리면 더보기\n\nconst PostCard = ({\n  post\n}) => {\n  _s();\n\n  const {\n    0: liked,\n    1: setLiked\n  } = useState(false);\n  const {\n    0: commentFormOpened,\n    1: setCommentFormOpened\n  } = useState(false);\n  const me = useSelector(state => state.user.user);\n  const removePostLoading = useSelector(state => state.post.removePostLoading);\n  const id = me && me.id;\n  const dispatch = useDispatch();\n  const onToggleLike = useCallback(() => {\n    setLiked(prev => !prev);\n  }, []);\n  const onToggleComment = useCallback(() => {\n    setCommentFormOpened(prev => !prev);\n  }, []);\n  const removePost = useCallback(() => {\n    dispatch({\n      type: REMOVE_POST_REQUEST,\n      data: post.id\n    });\n  });\n  {\n    /*만약 로그인 했으면 아이디가 있음.\r\n    내 아이디와 게시글 장성자 아이디와 같다면\r\n    포스트 수정 가능*/\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      marginBottom: 10\n    },\n    children: [/*#__PURE__*/_jsxDEV(Card\n    /*                cover={post.Images[0] && <PostImages images = {post.Images}/>}*/\n    , {\n      actions: [/*#__PURE__*/_jsxDEV(RetweetOutlined, {}, \"retweet\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 21\n      }, this), liked ? /*#__PURE__*/_jsxDEV(HeartTwoTone, {\n        twoToneColor: \"red\",\n        onClick: onToggleLike\n      }, \"heart\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 29\n      }, this) : /*#__PURE__*/_jsxDEV(HeartOutlined, {\n        onClick: onToggleLike\n      }, \"heart\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 30\n      }, this), commentFormOpened ? /*#__PURE__*/_jsxDEV(MessageTwoTone, {\n        onClick: onToggleComment\n      }, \"commnet\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 25\n      }, this) : /*#__PURE__*/_jsxDEV(MessageOutlined, {\n        onClick: onToggleComment\n      }, \"commnet\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(Popover, {\n        content: /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: id && post.User.id === id ? /*#__PURE__*/_jsxDEV(ButtonGroup, {\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              children: \"\\uC218\\uC815\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              type: 'danger',\n              onClick: removePost,\n              loading: removePostLoading,\n              children: \"\\uC0AD\\uC81C\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 33\n          }, this) : /*#__PURE__*/_jsxDEV(Button, {\n            children: \"\\uC2E0\\uACE0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 33\n          }, this)\n        }, void 0, false),\n        children: [/*#__PURE__*/_jsxDEV(EllipsisOutlined, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 25\n        }, this), \",\"]\n      }, \"more\", true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 21\n      }, this)],\n      children: /*#__PURE__*/_jsxDEV(Card.Meta, {\n        avatar: /*#__PURE__*/_jsxDEV(Avatar, {\n          children: post.User.nickname\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 29\n        }, this),\n        title: post.User.nickname,\n        description: /*#__PURE__*/_jsxDEV(PostCardContent, {\n          postData: post.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 34\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), commentFormOpened && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(CommentForm, {\n        post: post\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(List, {\n        header: `${post.Comments.length} 댓글`,\n        itemLayout: \"horizontal\",\n        dataSource: post.Comments,\n        renderItem: item => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(Comment, {\n            author: item.User.nickname,\n            avatar: /*#__PURE__*/_jsxDEV(Avatar, {\n              children: item.User.nickname[0]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 45\n            }, this),\n            content: item.content\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 21\n      }, this), \"\\uB313\\uAE00 \\uBD80\\uBD84\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n};\n\n_s(PostCard, \"2aLur7Lc8PvxfOJtabytiqqYnFU=\", false, function () {\n  return [useSelector, useSelector, useDispatch];\n});\n\n_c = PostCard;\nPostCard.propTypes = {\n  post: PropTypes.object.isRequired\n};\nexport default PostCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostCard\");","map":{"version":3,"sources":["I:/react4/src/components/PostCard.js"],"names":["React","useCallback","useState","Avatar","Button","Card","Popover","List","Comment","RetweetOutlined","MessageTwoTone","HeartOutlined","HeartTwoTone","MessageOutlined","EllipsisOutlined","PropTypes","useDispatch","useSelector","PostImages","CommentForm","PostCardContent","REMOVE_POST_REQUEST","ButtonGroup","Group","PostCard","post","liked","setLiked","commentFormOpened","setCommentFormOpened","me","state","user","removePostLoading","id","dispatch","onToggleLike","prev","onToggleComment","removePost","type","data","marginBottom","User","nickname","content","Comments","length","item","propTypes","object","isRequired"],"mappings":"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","sourcesContent":["import React, {useCallback, useState} from 'react';\r\nimport {Avatar, Button, Card, Popover, List, Comment} from \"antd\";\r\nimport {RetweetOutlined , MessageTwoTone, HeartOutlined,HeartTwoTone , MessageOutlined, EllipsisOutlined } from '@ant-design/icons'\r\nimport PropTypes from 'prop-types';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport PostImages from \"./PostImages\";\r\nimport CommentForm from \"./CommentForm\";\r\nimport PostCardContent from \"./PostCardContent\";\r\nimport {REMOVE_POST_REQUEST} from \"../reducers/post\";\r\n\r\nconst ButtonGroup = Button.Group;\r\n\r\n//cover antd기능\r\n//popover 마우스 올리면 더보기\r\nconst PostCard = ({post}) => {\r\n    const [liked,setLiked] = useState(false);\r\n    const [commentFormOpened , setCommentFormOpened] = useState(false);\r\n    const me = useSelector((state)=>state.user.user);\r\n    const removePostLoading = useSelector((state)=> state.post.removePostLoading);\r\n    const id = me && me.id;\r\n    const dispatch = useDispatch();\r\n\r\n    const onToggleLike = useCallback(()=>{\r\n        setLiked((prev)=>!prev);\r\n    } , []);\r\n    const onToggleComment = useCallback(()=>{\r\n        setCommentFormOpened((prev)=>!prev);\r\n    } , []);\r\n\r\n    const removePost = useCallback(()=>{\r\n        dispatch({\r\n            type:REMOVE_POST_REQUEST,\r\n            data:post.id,\r\n        })\r\n    })\r\n    {/*만약 로그인 했으면 아이디가 있음.\r\n    내 아이디와 게시글 장성자 아이디와 같다면\r\n    포스트 수정 가능*/}\r\n    return (\r\n        <div style={{marginBottom:10}}>\r\n            <Card\r\n/*                cover={post.Images[0] && <PostImages images = {post.Images}/>}*/\r\n                actions={[\r\n                    <RetweetOutlined key =\"retweet\"/>,\r\n                    liked ?\r\n                            <HeartTwoTone twoToneColor = \"red\" key =\"heart\" onClick ={onToggleLike}/>\r\n                            :<HeartOutlined key =\"heart\" onClick ={onToggleLike}/> ,\r\n                    commentFormOpened ?\r\n                        <MessageTwoTone  key =\"commnet\" onClick = {onToggleComment}/>:\r\n                        <MessageOutlined key =\"commnet\" onClick = {onToggleComment}/>,\r\n                    <Popover key =\"more\" content={(\r\n                        <>\r\n                            {id && post.User.id === id ?(\r\n                                <ButtonGroup>\r\n                                    <Button>수정</Button>\r\n                                    <Button type={'danger'} onClick={removePost} loading={removePostLoading}>삭제</Button>\r\n                                </ButtonGroup>\r\n                            ) : <Button>신고</Button>}\r\n\r\n                        </>\r\n                    )}>\r\n                        <EllipsisOutlined />,\r\n                    </Popover>\r\n                ]}>\r\n                <Card.Meta\r\n                    avatar={<Avatar>\r\n                        {post.User.nickname}\r\n                    </Avatar>}\r\n                    title ={post.User.nickname}\r\n                    description={<PostCardContent postData = {post.content}/>}\r\n                />\r\n            </Card>\r\n            {commentFormOpened && (\r\n                <div>\r\n                    <CommentForm post = {post}/>\r\n                    <List\r\n                        header={`${post.Comments.length} 댓글`}\r\n                        itemLayout={\"horizontal\"}\r\n                        dataSource={post.Comments}\r\n                        renderItem={(item)=>(\r\n                            <li>\r\n                                <Comment\r\n                                    author={item.User.nickname}\r\n                                    avatar={<Avatar>{item.User.nickname[0]}</Avatar>}\r\n                                    content={item.content}\r\n                                />\r\n\r\n                            </li>\r\n                        )}\r\n                        />\r\n                    댓글 부분\r\n                </div>\r\n            )}\r\n{/*\r\n            <Comments/>*/}\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\nPostCard.propTypes = {\r\n    post : PropTypes.object.isRequired,\r\n}\r\nexport default PostCard;\r\n"]},"metadata":{},"sourceType":"module"}