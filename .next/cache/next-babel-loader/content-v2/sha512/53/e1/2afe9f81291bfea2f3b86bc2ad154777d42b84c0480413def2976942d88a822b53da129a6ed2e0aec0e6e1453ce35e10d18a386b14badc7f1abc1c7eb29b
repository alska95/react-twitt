{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { ADD_POST_TO_ME, REMOVE_POST_OF_ME } from \"./post\";\nimport produce from \"immer\";\nexport const initialState = {\n  isLoggedIn: false,\n  isLoggingIn: false,\n  isLoggingOut: false,\n\n  /*로그아웃 시도중*/\n  user: null,\n  isSigningUp: false,\n  isSignedIn: false,\n  changeNicknameLoading: false,\n  changeNicknameDone: false,\n  changeNicknameError: null,\n  signUpData: {},\n  loginData: {}\n};\nexport const loginAction = data => {\n  return dispatch => {\n    dispatch(loginRequestAction());\n\n    try {\n      dispatch(loginSuccessAction(data));\n    } catch (err) {\n      dispatch(loginFailureAction(data));\n    }\n  };\n};\nexport const logoutAction = data => {\n  return dispatch => {\n    dispatch(logoutRequestAction());\n\n    try {\n      dispatch(logoutSuccessAction(data));\n    } catch (err) {\n      dispatch(logoutFailureAction(data));\n    }\n  };\n};\nexport const LOG_IN_SUCCESS = 'LOG_IN_SUCCESS';\nexport const LOG_IN_FAILURE = 'LOG_IN_FAILURE';\nexport const LOG_IN_REQUEST = 'LOG_IN_REQUEST';\nexport const LOG_OUT_SUCCESS = 'LOG_OUT_SUCCESS';\nexport const LOG_OUT_FAILURE = 'LOG_OUT_FAILURE';\nexport const LOG_OUT_REQUEST = 'LOG_OUT_REQUEST';\nexport const SIGN_UP_REQUEST = 'SIGN_UP_REQUEST';\nexport const SIGN_UP_SUCCESS = 'SIGN_UP_REQUEST';\nexport const SIGN_UP_FAILURE = 'SIGN_UP_REQUEST';\nexport const CHANGE_NICKNAME_REQUEST = 'CHANGE_NICKNAME_REQUEST';\nexport const CHANGE_NICKNAME_SUCCESS = 'CHANGE_NICKNAME_REQUEST';\nexport const CHANGE_NICKNAME_FAILURE = 'CHANGE_NICKNAME_REQUEST';\nexport const FOLLOW_REQUEST = 'FOLLOW_REQUEST';\nexport const FOLLOW_SUCCESS = 'FOLLOW_SUCCESS';\nexport const FOLLOW_FAILURE = 'FOLLOW_FAILURE';\nexport const UNFOLLOW_REQUEST = 'UNFOLLOW_REQUEST';\nexport const UNFOLLOW_SUCCESS = 'UNFOLLOW_SUCCESS';\nexport const UNFOLLOW_FAILURE = 'UNFOLLOW_FAILURE';\nexport const loginSuccessAction = data => {\n  return {\n    type: LOG_IN_SUCCESS,\n    data\n  };\n};\nexport const loginFailureAction = data => {\n  return {\n    type: LOG_IN_FAILURE,\n    data\n  };\n};\nexport const logoutSuccessAction = data => {\n  return {\n    type: LOG_OUT_SUCCESS,\n    data\n  };\n};\nexport const logoutFailureAction = data => {\n  return {\n    type: LOG_OUT_FAILURE,\n    data\n  };\n};\nexport const logoutRequestAction = data => {\n  return {\n    type: LOG_OUT_REQUEST,\n    data\n  };\n};\nexport const loginRequestAction = data => ({\n  type: LOG_IN_REQUEST,\n  data\n});\n\nconst dummyUser = data => _objectSpread(_objectSpread({}, data), {}, {\n  nickname: '황경하',\n  id: 1,\n  Posts: [{\n    id: 1\n  }],\n  Followings: [{\n    nickname: '가나다'\n  }, {\n    nickname: '가ㄴ나다'\n  }, {\n    nickname: '나다'\n  }],\n  Followers: [{\n    nickname: '가나다'\n  }, {\n    nickname: '가ㄴ나다'\n  }, {\n    nickname: '나다'\n  }]\n});\n\nconst reducer = (state = initialState, action) => {\n  return produce(state, draft => {\n    switch (action.type) {\n      case LOG_IN_REQUEST:\n        {\n          draft.isLoggedIn = true;\n          break;\n        }\n\n      case LOG_IN_SUCCESS:\n        {\n          draft.isLoggedIn = true;\n          draft.isLoggingIn = false;\n          draft.user = dummyUser(action.data);\n          break;\n        }\n\n      case LOG_IN_FAILURE:\n        {\n          draft.isLoggedIn = false;\n          draft.isLoggingIn = false;\n          break;\n        }\n\n      case LOG_OUT_SUCCESS:\n        {\n          draft.isLoggedIn = false;\n          draft.isLoggingOut = false;\n          break;\n        }\n\n      case LOG_OUT_FAILURE:\n        {\n          draft.isLoggedIn = false;\n          draft.isLoggingOut = false;\n          break;\n        }\n\n      case LOG_OUT_REQUEST:\n        {\n          draft.isLoggingOut = true;\n          draft.user = action.data;\n          break;\n        }\n\n      case SIGN_UP_REQUEST:\n        draft.isSignedIn = false;\n        draft.isSigningUp = true;\n        break;\n\n      case SIGN_UP_SUCCESS:\n        draft.signUpLoading = false;\n        draft.signUpDone = true;\n        break;\n\n      case SIGN_UP_FAILURE:\n        draft.signUpLoading = false;\n        draft.signUpError = action.error;\n        break;\n\n      case CHANGE_NICKNAME_REQUEST:\n        draft.changeNicknameLoading = true;\n        draft.changeNicknameError = null;\n        draft.changeNicknameDone = false;\n        break;\n\n      case CHANGE_NICKNAME_SUCCESS:\n        draft.changeNicknameLoading = false;\n        draft.changeNicknameDone = true;\n        break;\n\n      case CHANGE_NICKNAME_FAILURE:\n        draft.changeNicknameLoading = false;\n        draft.changeNicknameError = action.error;\n        break;\n\n      case ADD_POST_TO_ME:\n        draft.user.Posts.unshift({\n          id: action.data\n        });\n        break;\n\n      /*                return{\r\n                          ...state,\r\n                          user: {\r\n                              ...state.user,\r\n                              Posts: [{id:action.data}, ...state.user.Posts],\r\n                          }\r\n                      }*/\n\n      case REMOVE_POST_OF_ME:\n        draft.user.Posts = draft.user.Posts.filter(v => v.id !== action.data);\n        break;\n\n      /*                return{\r\n                          ...state,\r\n                          user: {\r\n                              ...state.user,\r\n                              Posts: state.user.Posts.filter((v)=>v.id === action.data),\r\n                          }\r\n                      }*/\n\n      default:\n        break;\n    }\n  });\n};\n\nexport default reducer;","map":{"version":3,"sources":["I:/react4/src/reducers/user.js"],"names":["ADD_POST_TO_ME","REMOVE_POST_OF_ME","produce","initialState","isLoggedIn","isLoggingIn","isLoggingOut","user","isSigningUp","isSignedIn","changeNicknameLoading","changeNicknameDone","changeNicknameError","signUpData","loginData","loginAction","data","dispatch","loginRequestAction","loginSuccessAction","err","loginFailureAction","logoutAction","logoutRequestAction","logoutSuccessAction","logoutFailureAction","LOG_IN_SUCCESS","LOG_IN_FAILURE","LOG_IN_REQUEST","LOG_OUT_SUCCESS","LOG_OUT_FAILURE","LOG_OUT_REQUEST","SIGN_UP_REQUEST","SIGN_UP_SUCCESS","SIGN_UP_FAILURE","CHANGE_NICKNAME_REQUEST","CHANGE_NICKNAME_SUCCESS","CHANGE_NICKNAME_FAILURE","FOLLOW_REQUEST","FOLLOW_SUCCESS","FOLLOW_FAILURE","UNFOLLOW_REQUEST","UNFOLLOW_SUCCESS","UNFOLLOW_FAILURE","type","dummyUser","nickname","id","Posts","Followings","Followers","reducer","state","action","draft","signUpLoading","signUpDone","signUpError","error","unshift","filter","v"],"mappings":"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","sourcesContent":["import {ADD_POST_TO_ME, REMOVE_POST_OF_ME} from \"./post\";\r\nimport produce from \"immer\";\r\n\r\nexport const initialState = {\r\n    isLoggedIn: false,\r\n    isLoggingIn:false,\r\n    isLoggingOut: false, /*로그아웃 시도중*/\r\n\r\n    user: null,\r\n    isSigningUp:false,\r\n    isSignedIn:false,\r\n\r\n    changeNicknameLoading:false,\r\n    changeNicknameDone: false,\r\n    changeNicknameError:null,\r\n\r\n    signUpData: {},\r\n    loginData: {},\r\n};\r\nexport const loginAction = (data) =>{\r\n    return (dispatch) =>{\r\n        dispatch(loginRequestAction());\r\n        try{\r\n            dispatch(loginSuccessAction(data));\r\n        }catch(err){\r\n            dispatch(loginFailureAction(data));\r\n        }\r\n    }\r\n}\r\nexport const logoutAction = (data) =>{\r\n    return (dispatch) =>{\r\n        dispatch(logoutRequestAction());\r\n        try{\r\n            dispatch(logoutSuccessAction(data));\r\n        }catch(err){\r\n            dispatch(logoutFailureAction(data));\r\n        }\r\n    }\r\n}\r\n\r\nexport const LOG_IN_SUCCESS = 'LOG_IN_SUCCESS';\r\nexport const LOG_IN_FAILURE = 'LOG_IN_FAILURE';\r\nexport const LOG_IN_REQUEST = 'LOG_IN_REQUEST';\r\n\r\nexport const LOG_OUT_SUCCESS = 'LOG_OUT_SUCCESS';\r\nexport const LOG_OUT_FAILURE = 'LOG_OUT_FAILURE';\r\nexport const LOG_OUT_REQUEST = 'LOG_OUT_REQUEST';\r\n\r\nexport const SIGN_UP_REQUEST = 'SIGN_UP_REQUEST';\r\nexport const SIGN_UP_SUCCESS = 'SIGN_UP_REQUEST';\r\nexport const SIGN_UP_FAILURE = 'SIGN_UP_REQUEST';\r\n\r\nexport const CHANGE_NICKNAME_REQUEST = 'CHANGE_NICKNAME_REQUEST';\r\nexport const CHANGE_NICKNAME_SUCCESS = 'CHANGE_NICKNAME_REQUEST';\r\nexport const CHANGE_NICKNAME_FAILURE = 'CHANGE_NICKNAME_REQUEST';\r\n\r\nexport const FOLLOW_REQUEST = 'FOLLOW_REQUEST';\r\nexport const FOLLOW_SUCCESS = 'FOLLOW_SUCCESS';\r\nexport const FOLLOW_FAILURE = 'FOLLOW_FAILURE';\r\n\r\nexport const UNFOLLOW_REQUEST = 'UNFOLLOW_REQUEST';\r\nexport const UNFOLLOW_SUCCESS = 'UNFOLLOW_SUCCESS';\r\nexport const UNFOLLOW_FAILURE = 'UNFOLLOW_FAILURE';\r\n\r\n\r\n\r\nexport const loginSuccessAction= (data) =>{\r\n\r\n    return{\r\n        type:LOG_IN_SUCCESS,\r\n        data,\r\n    }\r\n};\r\nexport const loginFailureAction= (data) =>{\r\n    return{\r\n        type:LOG_IN_FAILURE,\r\n        data,\r\n    }\r\n};\r\nexport const logoutSuccessAction = (data) =>{\r\n    return{\r\n        type:LOG_OUT_SUCCESS,\r\n        data,\r\n    }\r\n}\r\n\r\n\r\nexport const logoutFailureAction = (data) =>{\r\n    return{\r\n        type:LOG_OUT_FAILURE,\r\n        data,\r\n    }\r\n}\r\n\r\n\r\nexport const logoutRequestAction = (data) =>{\r\n    return{\r\n        type:LOG_OUT_REQUEST,\r\n        data,\r\n    }\r\n}\r\n\r\nexport const loginRequestAction= (data) =>({\r\n    type:LOG_IN_REQUEST,\r\n    data,\r\n})\r\n\r\nconst dummyUser = (data) => ({\r\n    ...data,\r\n    nickname : '황경하',\r\n    id: 1,\r\n    Posts : [{id : 1}],\r\n    Followings: [{nickname : '가나다'},{nickname : '가ㄴ나다'},{nickname : '나다'}],\r\n    Followers:[{nickname : '가나다'},{nickname : '가ㄴ나다'},{nickname : '나다'}],\r\n});\r\n\r\nconst reducer = (state = initialState , action) =>{\r\n    return produce(state , (draft)=>{\r\n        switch (action.type) {\r\n            case LOG_IN_REQUEST:{\r\n                draft.isLoggedIn = true;\r\n                break;\r\n            }\r\n            case LOG_IN_SUCCESS:{\r\n\r\n                draft.isLoggedIn= true;\r\n                draft.isLoggingIn = false;\r\n                draft.user = dummyUser(action.data);\r\n                break;\r\n            }\r\n            case LOG_IN_FAILURE:{\r\n                draft.isLoggedIn= false;\r\n                draft.isLoggingIn = false;\r\n                break;\r\n            }\r\n            case LOG_OUT_SUCCESS:{\r\n                draft.isLoggedIn= false;\r\n                draft.isLoggingOut = false;\r\n                break;\r\n\r\n            }\r\n            case LOG_OUT_FAILURE:{\r\n                draft.isLoggedIn= false;\r\n                draft.isLoggingOut = false;\r\n                break;\r\n\r\n            }\r\n            case LOG_OUT_REQUEST:{\r\n                draft.isLoggingOut = true;\r\n                draft.user = action.data;\r\n                break;\r\n\r\n            }\r\n            case SIGN_UP_REQUEST:\r\n                draft.isSignedIn = false;\r\n                draft.isSigningUp = true;\r\n                break;\r\n            case SIGN_UP_SUCCESS:\r\n                draft.signUpLoading = false;\r\n                draft.signUpDone = true;\r\n                break;\r\n            case SIGN_UP_FAILURE:\r\n                draft.signUpLoading = false;\r\n                draft.signUpError = action.error;\r\n                break;\r\n            case CHANGE_NICKNAME_REQUEST:\r\n                draft.changeNicknameLoading = true;\r\n                draft.changeNicknameError = null;\r\n                draft.changeNicknameDone = false;\r\n                break;\r\n            case CHANGE_NICKNAME_SUCCESS:\r\n                draft.changeNicknameLoading = false;\r\n                draft.changeNicknameDone = true;\r\n                break;\r\n            case CHANGE_NICKNAME_FAILURE:\r\n                draft.changeNicknameLoading = false;\r\n                draft.changeNicknameError = action.error;\r\n                break;\r\n            case ADD_POST_TO_ME:\r\n                draft.user.Posts.unshift({id : action.data});\r\n                break;\r\n/*                return{\r\n                    ...state,\r\n                    user: {\r\n                        ...state.user,\r\n                        Posts: [{id:action.data}, ...state.user.Posts],\r\n                    }\r\n                }*/\r\n            case REMOVE_POST_OF_ME:\r\n                draft.user.Posts = draft.user.Posts.filter((v)=> v.id !== action.data);\r\n                break;\r\n/*                return{\r\n                    ...state,\r\n                    user: {\r\n                        ...state.user,\r\n                        Posts: state.user.Posts.filter((v)=>v.id === action.data),\r\n                    }\r\n                }*/\r\n\r\n            default:\r\n                break;\r\n        }\r\n    })\r\n\r\n}\r\n\r\nexport default reducer;\r\n"]},"metadata":{},"sourceType":"module"}