{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nexport const initialState = {\n  isLoggedIn: false,\n  isLoggingIn: false,\n  isLoggingOut: false,\n\n  /*로그아웃 시도중*/\n  user: null,\n  signUpData: {},\n  loginData: {}\n};\nexport const loginAction = data => {\n  return dispatch => {\n    dispatch(loginRequestAction());\n\n    try {\n      dispatch(loginSuccessAction(data));\n    } catch (err) {\n      dispatch(loginFailureAction(data));\n    }\n  };\n};\nexport const logoutAction = data => {\n  return dispatch => {\n    dispatch(logoutRequestAction());\n\n    try {\n      dispatch(logoutSuccessAction(data));\n    } catch (err) {\n      dispatch(logoutFailureAction(data));\n    }\n  };\n};\nexport const loginSuccessAction = data => {\n  console.log(\"redux Login\");\n  return {\n    type: 'LOG_IN_SUCCESS',\n    data\n  };\n};\nexport const loginFailureAction = data => {\n  return {\n    type: 'LOG_IN_FAILURE',\n    data\n  };\n};\nexport const logoutSuccessAction = data => {\n  return {\n    type: 'LOG_OUT_SUCCESS',\n    data\n  };\n};\nexport const logoutFailureAction = data => {\n  return {\n    type: 'LOG_OUT_FAILURE',\n    data\n  };\n};\nexport const logoutRequestAction = data => {\n  return {\n    type: 'LOG_OUT_REQUEST',\n    data\n  };\n};\nexport const loginRequestAction = data => {\n  return {\n    type: 'LOG_IN_REQUEST',\n    data\n  };\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case 'LOG_IN_REQUEST':\n      {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          isLoggingIn: true,\n          user: action.data\n        });\n      }\n\n    case 'LOG_IN_SUCCESS':\n      {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          isLoggingIn: false,\n          isLoggedIn: true,\n          user: _objectSpread(_objectSpread({}, action.data), {}, {\n            nickname: '황경하'\n          })\n        });\n      }\n\n    case 'LOG_IN_FAILURE':\n      {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          isLoggedIn: false,\n          isLoggingIn: false\n        });\n      }\n\n    case 'LOG_OUT_SUCCESS':\n      {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          isLoggedIn: false,\n          isLoggingOut: false\n        });\n      }\n\n    case 'LOG_OUT_FAILURE':\n      {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          isLoggedIn: false,\n          isLoggingOut: false\n        });\n      }\n\n    case 'LOG_OUT_REQUEST':\n      {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          isLoggingOut: true,\n          user: action.data\n        });\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["I:/react4/src/reducers/user.js"],"names":["initialState","isLoggedIn","isLoggingIn","isLoggingOut","user","signUpData","loginData","loginAction","data","dispatch","loginRequestAction","loginSuccessAction","err","loginFailureAction","logoutAction","logoutRequestAction","logoutSuccessAction","logoutFailureAction","console","log","type","reducer","state","action","nickname"],"mappings":"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","sourcesContent":["export const initialState = {\r\n    isLoggedIn: false,\r\n    isLoggingIn:false,\r\n    isLoggingOut: false, /*로그아웃 시도중*/\r\n    user: null,\r\n    signUpData: {},\r\n    loginData: {},\r\n};\r\nexport const loginAction = (data) =>{\r\n    return (dispatch) =>{\r\n        dispatch(loginRequestAction());\r\n        try{\r\n            dispatch(loginSuccessAction(data));\r\n        }catch(err){\r\n            dispatch(loginFailureAction(data));\r\n        }\r\n    }\r\n}\r\nexport const logoutAction = (data) =>{\r\n    return (dispatch) =>{\r\n        dispatch(logoutRequestAction());\r\n        try{\r\n            dispatch(logoutSuccessAction(data));\r\n        }catch(err){\r\n            dispatch(logoutFailureAction(data));\r\n        }\r\n    }\r\n}\r\nexport const loginSuccessAction= (data) =>{\r\n    console.log(\"redux Login\");\r\n    return{\r\n        type:'LOG_IN_SUCCESS',\r\n        data,\r\n    }\r\n};\r\nexport const loginFailureAction= (data) =>{\r\n    return{\r\n        type:'LOG_IN_FAILURE',\r\n        data,\r\n    }\r\n};\r\nexport const logoutSuccessAction = (data) =>{\r\n    return{\r\n        type:'LOG_OUT_SUCCESS',\r\n        data,\r\n    }\r\n}\r\n\r\n\r\nexport const logoutFailureAction = (data) =>{\r\n    return{\r\n        type:'LOG_OUT_FAILURE',\r\n        data,\r\n    }\r\n}\r\n\r\n\r\nexport const logoutRequestAction = (data) =>{\r\n    return{\r\n        type:'LOG_OUT_REQUEST',\r\n        data,\r\n    }\r\n}\r\n\r\nexport const loginRequestAction= (data) =>{\r\n    return{\r\n        type:'LOG_IN_REQUEST',\r\n        data,\r\n    }\r\n};\r\n\r\n\r\nconst reducer = (state = initialState , action) =>{\r\n    switch (action.type) {\r\n        case 'LOG_IN_REQUEST':{\r\n            return{\r\n                ...state,\r\n                isLoggingIn: true,\r\n                user:action.data,\r\n            };\r\n        }\r\n        case 'LOG_IN_SUCCESS':{\r\n            return{\r\n\r\n                ...state,\r\n                isLoggingIn: false,\r\n                isLoggedIn: true,\r\n                user: {...action.data , nickname : '황경하'},\r\n            }\r\n        }\r\n        case 'LOG_IN_FAILURE':{\r\n            return{\r\n                ...state,\r\n                isLoggedIn: false,\r\n                isLoggingIn: false,\r\n            }\r\n        }\r\n        case 'LOG_OUT_SUCCESS':{\r\n            return{\r\n                ...state,\r\n                isLoggedIn: false,\r\n                isLoggingOut: false,\r\n            }\r\n        }\r\n        case 'LOG_OUT_FAILURE':{\r\n            return{\r\n                ...state,\r\n                isLoggedIn: false,\r\n                isLoggingOut: false,\r\n            }\r\n        }\r\n        case 'LOG_OUT_REQUEST':{\r\n            return{\r\n                ...state,\r\n                isLoggingOut: true,\r\n                user:action.data,\r\n            }\r\n        }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default reducer;\r\n"]},"metadata":{},"sourceType":"module"}