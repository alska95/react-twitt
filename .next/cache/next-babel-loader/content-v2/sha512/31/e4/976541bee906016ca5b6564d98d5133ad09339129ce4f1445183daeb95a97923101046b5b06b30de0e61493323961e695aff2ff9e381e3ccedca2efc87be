{"ast":null,"code":"import { createWrapper } from 'next-redux-wrapper';\nimport { applyMiddleware, compose } from 'redux';\nimport { createStore } from 'redux';\nimport reducer from '../reducers/index';\nimport { composeWithDevTools } from 'redux-devtools-extension';\n/*리덕스 기능 enhance*/\n\nconst configureStore = () => {\n  const middlewares = [];\n  const enhancer = false ? compose(applyMiddleware(...middlewares)) : composeWithDevTools(applyMiddleware(...middlewares));\n  const store = createStore(reducer, enhancer);\n  store.dispatch({\n    type: 'CHANGE_NICKNAME',\n    data: 'hwangkyeongha'\n  });\n  return store;\n};\n\nconst wrapper = createWrapper(configureStore, {\n  debug: true\n});\nexport default wrapper;","map":{"version":3,"sources":["I:/react4/src/store/configureStore.js"],"names":["createWrapper","applyMiddleware","compose","createStore","reducer","composeWithDevTools","configureStore","middlewares","enhancer","store","dispatch","type","data","wrapper","debug"],"mappings":"AAAA,SAAQA,aAAR,QAA4B,oBAA5B;AACA,SAAQC,eAAR,EAAyBC,OAAzB,QAAuC,OAAvC;AACA,SAAQC,WAAR,QAA0B,OAA1B;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,SAAQC,mBAAR,QAAkC,0BAAlC;AACA;;AAEA,MAAMC,cAAc,GAAC,MAAI;AACrB,QAAMC,WAAW,GAAE,EAAnB;AACA,QAAMC,QAAQ,GAAG,QACZN,OAAO,CAACD,eAAe,CAAC,GAAGM,WAAJ,CAAhB,CADK,GAEZF,mBAAmB,CAACJ,eAAe,CAAC,GAAGM,WAAJ,CAAhB,CAFxB;AAIA,QAAME,KAAK,GAAGN,WAAW,CAACC,OAAD,EAAWI,QAAX,CAAzB;AACAC,EAAAA,KAAK,CAACC,QAAN,CAAe;AACXC,IAAAA,IAAI,EAAC,iBADM;AAEXC,IAAAA,IAAI,EAAC;AAFM,GAAf;AAIA,SAAOH,KAAP;AACH,CAZD;;AAcA,MAAMI,OAAO,GAAGb,aAAa,CAACM,cAAD,EACzB;AAACQ,EAAAA,KAAK;AAAN,CADyB,CAA7B;AAIA,eAAeD,OAAf","sourcesContent":["import {createWrapper} from 'next-redux-wrapper';\r\nimport {applyMiddleware, compose} from 'redux';\r\nimport {createStore} from 'redux'\r\nimport reducer from '../reducers/index'\r\nimport {composeWithDevTools} from 'redux-devtools-extension';\r\n/*리덕스 기능 enhance*/\r\n\r\nconst configureStore=()=>{\r\n    const middlewares =[];\r\n    const enhancer = process.env.NODE_ENV ==='production'\r\n        ?compose(applyMiddleware(...middlewares))\r\n        :composeWithDevTools(applyMiddleware(...middlewares));\r\n\r\n    const store = createStore(reducer , enhancer);\r\n    store.dispatch({\r\n        type:'CHANGE_NICKNAME',\r\n        data:'hwangkyeongha',\r\n    })\r\n    return store\r\n};\r\n\r\nconst wrapper = createWrapper(configureStore,\r\n    {debug: process.env.NODE_ENV === 'development',\r\n    });\r\n\r\nexport default wrapper;"]},"metadata":{},"sourceType":"module"}