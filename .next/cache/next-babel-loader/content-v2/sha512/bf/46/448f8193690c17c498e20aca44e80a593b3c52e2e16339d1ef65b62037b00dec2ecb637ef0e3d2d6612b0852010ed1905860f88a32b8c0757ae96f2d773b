{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"I:\\\\react4\\\\src\\\\components\\\\CommentForm.js\";\nimport React, { useCallback, useEffect } from 'react';\nimport { Form, Input, Button } from \"antd\";\nimport useInput from \"../hooks/useInput\";\nimport PropTypes from 'prop-types';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { ADD_COMMENT_REQUEST, ADD_POST_REQUEST } from \"../reducers/post\";\n/*리덕스 ,리엑트 폼 참고*/\n\nconst CommentForm = ({\n  post\n}) => {\n  const addCommentDone = useSelector(state => {\n    state.post.comment.addCommentDone;\n  });\n  const dispatch = useDispatch();\n  const id = useSelector(state => {\n    var _state$user$me;\n\n    return (_state$user$me = state.user.me) === null || _state$user$me === void 0 ? void 0 : _state$user$me.user;\n  });\n  /*로그인 안한경우 고려*/\n\n  const [commentText, onChangeCommentText, setCommentText] = useInput('');\n  useEffect(() => {\n    if (addCommentDone) {\n      setCommentText('');\n    }\n  }, [addCommentDone]);\n  const onSubmitComment = useCallback(() => {\n    console.log(post.id, commentText);\n    dispatch({\n      type: ADD_COMMENT_REQUEST,\n      data: {\n        content: commentText,\n        postId: post.id,\n        id\n      }\n    });\n  }, [commentText, id]);\n  return /*#__PURE__*/_jsxDEV(Form, {\n    onFinish: onSubmitComment,\n    children: /*#__PURE__*/_jsxDEV(Form.Item, {\n      children: [/*#__PURE__*/_jsxDEV(Input.TextArea, {\n        value: commentText,\n        onChange: onChangeCommentText,\n        rows: 4\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"primary\",\n        htmlType: \"submit\",\n        children: \"\\uC785\\uB825\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n};\n\nCommentForm.propTypes = {\n  post: PropTypes.object.isRequired\n};\nexport default CommentForm;","map":{"version":3,"sources":["I:/react4/src/components/CommentForm.js"],"names":["React","useCallback","useEffect","Form","Input","Button","useInput","PropTypes","useDispatch","useSelector","ADD_COMMENT_REQUEST","ADD_POST_REQUEST","CommentForm","post","addCommentDone","state","comment","dispatch","id","user","me","commentText","onChangeCommentText","setCommentText","onSubmitComment","console","log","type","data","content","postId","propTypes","object","isRequired"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,WAAf,EAA4BC,SAA5B,QAA4C,OAA5C;AACA,SAAQC,IAAR,EAAcC,KAAd,EAAqBC,MAArB,QAAkC,MAAlC;AACA,OAAOC,QAAP,MAAqB,mBAArB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAAQC,WAAR,EAAqBC,WAArB,QAAuC,aAAvC;AACA,SAAQC,mBAAR,EAA6BC,gBAA7B,QAAoD,kBAApD;AAEA;;AACA,MAAMC,WAAW,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAY;AAC5B,QAAMC,cAAc,GAAGL,WAAW,CAAEM,KAAD,IAAS;AAACA,IAAAA,KAAK,CAACF,IAAN,CAAWG,OAAX,CAAmBF,cAAnB;AAAkC,GAA7C,CAAlC;AACA,QAAMG,QAAQ,GAAGT,WAAW,EAA5B;AACA,QAAMU,EAAE,GAAGT,WAAW,CAAEM,KAAD;AAAA;;AAAA,6BAASA,KAAK,CAACI,IAAN,CAAWC,EAApB,mDAAS,eAAeD,IAAxB;AAAA,GAAD,CAAtB;AAAqD;;AACrD,QAAM,CAACE,WAAD,EAAeC,mBAAf,EAAqCC,cAArC,IAAuDjB,QAAQ,CAAC,EAAD,CAArE;AAEAJ,EAAAA,SAAS,CAAC,MAAI;AACV,QAAGY,cAAH,EAAkB;AACdS,MAAAA,cAAc,CAAC,EAAD,CAAd;AACH;AACJ,GAJQ,EAIP,CAACT,cAAD,CAJO,CAAT;AAMA,QAAMU,eAAe,GAAGvB,WAAW,CAAC,MAAI;AACpCwB,IAAAA,OAAO,CAACC,GAAR,CAAYb,IAAI,CAACK,EAAjB,EAAsBG,WAAtB;AACAJ,IAAAA,QAAQ,CAAC;AACLU,MAAAA,IAAI,EAAGjB,mBADF;AAELkB,MAAAA,IAAI,EAAE;AAACC,QAAAA,OAAO,EAAER,WAAV;AAAwBS,QAAAA,MAAM,EAAEjB,IAAI,CAACK,EAArC;AAAyCA,QAAAA;AAAzC;AAFD,KAAD,CAAR;AAIH,GANkC,EAM/B,CAACG,WAAD,EAAeH,EAAf,CAN+B,CAAnC;AAQA,sBACI,QAAC,IAAD;AAAM,IAAA,QAAQ,EAAEM,eAAhB;AAAA,2BACI,QAAC,IAAD,CAAM,IAAN;AAAA,8BACI,QAAC,KAAD,CAAO,QAAP;AAAgB,QAAA,KAAK,EAAEH,WAAvB;AAAoC,QAAA,QAAQ,EAAEC,mBAA9C;AAAmE,QAAA,IAAI,EAAE;AAAzE;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,MAAD;AAAQ,QAAA,IAAI,EAAE,SAAd;AAAyB,QAAA,QAAQ,EAAE,QAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAQH,CA5BD;;AA8BAV,WAAW,CAACmB,SAAZ,GAAwB;AACpBlB,EAAAA,IAAI,EAAEN,SAAS,CAACyB,MAAV,CAAiBC;AADH,CAAxB;AAIA,eAAerB,WAAf","sourcesContent":["import React, {useCallback, useEffect} from 'react';\r\nimport {Form, Input ,Button} from \"antd\";\r\nimport useInput from \"../hooks/useInput\";\r\nimport PropTypes from 'prop-types';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {ADD_COMMENT_REQUEST, ADD_POST_REQUEST} from \"../reducers/post\";\r\n\r\n/*리덕스 ,리엑트 폼 참고*/\r\nconst CommentForm = ({post}) => {\r\n    const addCommentDone = useSelector((state)=>{state.post.comment.addCommentDone});\r\n    const dispatch = useDispatch();\r\n    const id = useSelector((state)=>state.user.me?.user);/*로그인 안한경우 고려*/\r\n    const [commentText , onChangeCommentText , setCommentText] = useInput('');\r\n\r\n    useEffect(()=>{\r\n        if(addCommentDone){\r\n            setCommentText('');\r\n        }\r\n    },[addCommentDone])\r\n\r\n    const onSubmitComment = useCallback(()=>{\r\n        console.log(post.id , commentText);\r\n        dispatch({\r\n            type : ADD_COMMENT_REQUEST,\r\n            data: {content: commentText , postId: post.id ,id},\r\n        });\r\n    } , [commentText , id]);\r\n\r\n    return (\r\n        <Form onFinish={onSubmitComment}>\r\n            <Form.Item>\r\n                <Input.TextArea value={commentText} onChange={onChangeCommentText} rows={4}/>\r\n                <Button type={\"primary\"} htmlType={\"submit\"}>입력</Button>\r\n            </Form.Item>\r\n        </Form>\r\n    );\r\n};\r\n\r\nCommentForm.propTypes = {\r\n    post: PropTypes.object.isRequired,\r\n}\r\n\r\nexport default CommentForm;\r\n"]},"metadata":{},"sourceType":"module"}