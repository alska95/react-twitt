{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nexport const initialState = {\n  isLoggedIn: true,\n  user: null,\n  signUpData: {},\n  loginData: {}\n};\nexport const loginAction = data => {\n  return (dispatch, getState) => {\n    const state = getState();\n    dispatch(loginRequestAction());\n    axios.post('/api/login').then(res => {\n      dispatch(loginSuccessAction(res.data));\n    }).catch(res => {\n      dispatch(loginFailureAction(res.data));\n    });\n  };\n};\nexport const logoutAction = data => {\n  return (dispatch, getState) => {\n    const state = getState();\n    dispatch(loginRequestAction());\n    axios.post('/api/login').then(res => {\n      dispatch(loginSuccessAction(res.data));\n    }).catch(res => {\n      dispatch(loginFailureAction(res.data));\n    });\n  };\n};\nexport const loginSuccessAction = data => {\n  return {\n    type: 'LOG_IN_SUCCESS',\n    data\n  };\n};\nexport const loginFailureAction = data => {\n  return {\n    type: 'LOG_IN_FAILURE',\n    data\n  };\n};\nexport const logoutSuccessAction = data => {\n  return {\n    type: 'LOG_OUT_SUCCESS',\n    data\n  };\n};\nexport const logoutFaliureAction = data => {\n  return {\n    type: 'LOG_OUT_FAILURE',\n    data\n  };\n};\nexport const logoutRequestAction = data => {\n  return {\n    type: 'LOG_OUT_REQUEST',\n    data\n  };\n};\nexport const loginRequestAction = data => {\n  return {\n    type: 'LOG_IN_REQUEST',\n    data\n  };\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case 'LOG_IN':\n      {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          isLoggedIn: true,\n          user: action.data\n        });\n      }\n\n    case 'LOG_OUT':\n      {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          isLoggedIn: false,\n          user: action.data\n        });\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["I:/react4/src/reducers/user.js"],"names":["initialState","isLoggedIn","user","signUpData","loginData","loginAction","data","dispatch","getState","state","loginRequestAction","axios","post","then","res","loginSuccessAction","catch","loginFailureAction","logoutAction","type","logoutSuccessAction","logoutFaliureAction","logoutRequestAction","reducer","action"],"mappings":"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","sourcesContent":["export const initialState = {\r\n    isLoggedIn: true,\r\n    user: null,\r\n    signUpData: {},\r\n    loginData: {},\r\n};\r\nexport const loginAction = (data) =>{\r\n    return (dispatch , getState) =>{\r\n        const state = getState();\r\n        dispatch(loginRequestAction());\r\n        axios.post('/api/login')\r\n            .then((res)=>{\r\n                dispatch(loginSuccessAction(res.data));\r\n            })\r\n            .catch((res)=>{\r\n                dispatch(loginFailureAction(res.data));\r\n            })\r\n    }\r\n}\r\n\r\nexport const logoutAction = (data) =>{\r\n    return (dispatch , getState) =>{\r\n        const state = getState();\r\n        dispatch(loginRequestAction());\r\n        axios.post('/api/login')\r\n            .then((res)=>{\r\n                dispatch(loginSuccessAction(res.data));\r\n            })\r\n            .catch((res)=>{\r\n                dispatch(loginFailureAction(res.data));\r\n            })\r\n    }\r\n}\r\nexport const loginSuccessAction= (data) =>{\r\n    return{\r\n        type:'LOG_IN_SUCCESS',\r\n        data,\r\n    }\r\n};\r\nexport const loginFailureAction= (data) =>{\r\n    return{\r\n        type:'LOG_IN_FAILURE',\r\n        data,\r\n    }\r\n};\r\nexport const logoutSuccessAction = (data) =>{\r\n    return{\r\n        type:'LOG_OUT_SUCCESS',\r\n        data,\r\n    }\r\n}\r\n\r\n\r\nexport const logoutFaliureAction = (data) =>{\r\n    return{\r\n        type:'LOG_OUT_FAILURE',\r\n        data,\r\n    }\r\n}\r\n\r\n\r\nexport const logoutRequestAction = (data) =>{\r\n    return{\r\n        type:'LOG_OUT_REQUEST',\r\n        data,\r\n    }\r\n}\r\n\r\nexport const loginRequestAction= (data) =>{\r\n    return{\r\n        type:'LOG_IN_REQUEST',\r\n        data,\r\n    }\r\n};\r\n\r\n\r\nconst reducer = (state = initialState , action) =>{\r\n    switch (action.type) {\r\n        case 'LOG_IN':{\r\n            return{\r\n                ...state,\r\n                isLoggedIn:true,\r\n                user:action.data,\r\n            };\r\n        }\r\n        case 'LOG_OUT':{\r\n            return{\r\n                ...state,\r\n                isLoggedIn: false,\r\n                user:action.data,\r\n            }\r\n        }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default reducer;\r\n"]},"metadata":{},"sourceType":"module"}