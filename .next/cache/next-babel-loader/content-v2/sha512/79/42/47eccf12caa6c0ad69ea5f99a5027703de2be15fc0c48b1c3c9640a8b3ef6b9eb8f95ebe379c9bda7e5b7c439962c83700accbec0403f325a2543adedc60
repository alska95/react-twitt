{"ast":null,"code":"import { delay, put, throttle } from \"redux-saga/effects\";\nimport { all, fork } from \"@redux-saga/core/effects\";\n\nfunction* addPost(action) {\n  try {\n    yield delay(1000);\n    /*        const result = yield call(addPostAPI , action.data);*/\n\n    yield put({\n      type: 'ADD_POST_SUCCESS',\n      data: action.data\n    });\n  } catch (err) {\n    yield put({\n      type: 'ADD_POST_FAILURE',\n      data: err.response.data\n    });\n  }\n}\n\nfunction* watchAddPost() {\n  yield throttle('ADD_POST_REQUEST', addPost, 2000);\n  /*요청을 2초에 한번만 받아들임*/\n}\n\nexport default function* postSaga() {\n  yield all([fork(watchAddPost)]);\n}","map":{"version":3,"sources":["I:/react4/src/sagas/post.js"],"names":["delay","put","throttle","all","fork","addPost","action","type","data","err","response","watchAddPost","postSaga"],"mappings":"AAAA,SAAQA,KAAR,EAAeC,GAAf,EAAoBC,QAApB,QAAmC,oBAAnC;AACA,SAAQC,GAAR,EAAaC,IAAb,QAAwB,0BAAxB;;AAIA,UAAUC,OAAV,CAAkBC,MAAlB,EAAyB;AACrB,MAAG;AACC,UAAMN,KAAK,CAAC,IAAD,CAAX;AACA;;AACA,UAAMC,GAAG,CAAC;AACNM,MAAAA,IAAI,EAAE,kBADA;AAENC,MAAAA,IAAI,EAAGF,MAAM,CAACE;AAFR,KAAD,CAAT;AAIH,GAPD,CAOC,OAAMC,GAAN,EAAU;AACP,UAAMR,GAAG,CAAC;AACNM,MAAAA,IAAI,EAAE,kBADA;AAENC,MAAAA,IAAI,EAAEC,GAAG,CAACC,QAAJ,CAAaF;AAFb,KAAD,CAAT;AAIH;AACJ;;AAGD,UAAUG,YAAV,GAAwB;AACpB,QAAMT,QAAQ,CAAC,kBAAD,EAAsBG,OAAtB,EAAgC,IAAhC,CAAd;AAAqD;AACxD;;AAED,eAAe,UAAUO,QAAV,GAAoB;AAC/B,QAAMT,GAAG,CAAC,CACNC,IAAI,CAACO,YAAD,CADE,CAAD,CAAT;AAGH","sourcesContent":["import {delay, put, throttle} from \"redux-saga/effects\";\r\nimport {all, fork} from \"@redux-saga/core/effects\";\r\n\r\n\r\n\r\nfunction* addPost(action){\r\n    try{\r\n        yield delay(1000)\r\n        /*        const result = yield call(addPostAPI , action.data);*/\r\n        yield put({\r\n            type: 'ADD_POST_SUCCESS',\r\n            data : action.data\r\n        })\r\n    }catch(err){\r\n        yield put({\r\n            type: 'ADD_POST_FAILURE',\r\n            data: err.response.data,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nfunction* watchAddPost(){\r\n    yield throttle('ADD_POST_REQUEST' , addPost , 2000); /*요청을 2초에 한번만 받아들임*/\r\n}\r\n\r\nexport default function* postSaga(){\r\n    yield all([\r\n        fork(watchAddPost),\r\n    ])\r\n}"]},"metadata":{},"sourceType":"module"}